services:
  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: ${CONTAINER_NAME}-nginx
    restart: unless-stopped
    env_file: .env
    environment:
      HOSTNAME: ${HOSTNAME}
    ports:
      - "80:80"
      - "443:443" # Optional: Only needed if you're using real SSL - https://host.docker.internal
    volumes:
      - wordpress:/var/www/html
    depends_on:
      - wordpress
    networks:
      - internal

  wordpress:
    image: wordpress:6.8.1-fpm-alpine
    container_name: ${CONTAINER_NAME}-wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: database:3306
      WORDPRESS_DB_NAME: ${DATABASE_NAME}
      WORDPRESS_DB_USER: ${DATABASE_USER}
      WORDPRESS_DB_PASSWORD: ${DATABASE_PASSWORD}
      WORDPRESS_DEBUG: "true" # Optional: Enable debug mode
    volumes:
      - wordpress:/var/www/html
      - ./wp-content:/var/www/html/wp-content:rw
    depends_on:
      - database
    networks:
      - internal

  php-composer:
    build:
      context: .
      dockerfile: Dockerfile.php
      args:
        PLUGIN_NAME: ${PLUGIN_NAME}
    container_name: ${CONTAINER_NAME}-php-composer
    working_dir: /var/www/html/wp-content/plugins/${PLUGIN_NAME}
    volumes:
      - ./wp-content:/var/www/html/wp-content
    depends_on:
      - wordpress
    networks:
      - internal

  node-frontend:
    build:
      context: .
      dockerfile: Dockerfile.node
      args:
        PLUGIN_NAME: ${PLUGIN_NAME}
    container_name: ${CONTAINER_NAME}-node-frontend
    working_dir: /app/wp-content/plugins/${PLUGIN_NAME}
    volumes:
      - ./wp-content:/app/wp-content
      - node_modules:/app/wp-content/plugins/${PLUGIN_NAME}/node_modules
    depends_on:
      - wordpress
    networks:
      - internal

  database:
    image: mysql:8.0
    container_name: ${CONTAINER_NAME}-database
    restart: unless-stopped
    env_file: .env
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - internal
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DATABASE_ROOT_PASSWORD}",
        ]
      timeout: 20s
      retries: 10

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${CONTAINER_NAME}-phpmyadmin
    env_file: .env
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - database
    networks:
      - internal

volumes:
  dbdata:
  wordpress:
  node_modules:

networks:
  internal:
    driver: bridge
